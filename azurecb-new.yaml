apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis-server
  namespace: ingress-basic-oct
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
  template:
    metadata:
      labels:
        app: redis-server
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: redis-server
          image: redis
          ports:
            - containerPort: 6379
              name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-server
  namespace: ingress-basic-oct
spec:
  ports:
    - port: 6379
  selector:
    app: redis-server
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cbazuredemo-cbserver
  namespace: ingress-basic-oct
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: cbazuredemo-cbserver
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name:  cbazuredemo-cbserver
          image: azcrbrokeroct15.azurecr.io/cbazuredemo_cbserver:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 8040
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: REDIS
              value: "redis-server"
            - name: SOCKET
              value: "cbazuredemo-socketserver"

---
apiVersion: v1
kind: Service
metadata:
  name: cbazuredemo-cbserver-lb
  namespace: ingress-basic-oct
spec:
  type: ClusterIP
  ports:
    - port: 8040
      targetPort: 8040
      protocol: TCP
  selector:
    app: cbazuredemo-cbserver

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cbazuredemo-socketserver
  namespace: ingress-basic-oct
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: cbazuredemo-socketserver
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name:  cbazuredemo-socketserver
          image: azcrbrokeroct15.azurecr.io/cbazuredemo_socket-server:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 8030
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: REDIS
              value: "redis-server"
---
apiVersion: v1
kind: Service
metadata:
  name: cbazuredemo-socketserver-lb
  namespace: ingress-basic-oct
spec:
  type: ClusterIP
  ports:
    - port: 8030
      targetPort: 8030
      protocol: TCP
  selector:
    app: cbazuredemo-socketserver


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cbwebsocket-mani-oct
  namespace : ingress-basic-oct
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: azure-cloudbroker-oct.eastus.cloudapp.azure.com
      http:
        paths:
          - path: /xmlapi
            backend:
              serviceName: cbazuredemo-cbserver-lb
              servicePort: 8040
          - path: /connect
            backend:
              serviceName: cbazuredemo-socketserver-lb
              servicePort: 8030
          - path: /callbackCS
            backend:
              serviceName: cbazuredemo-socketserver-lb
              servicePort: 8030